% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/leaflogix-run.R
\name{leaflogix-run}
\alias{leaflogix-run}
\alias{run_population}
\alias{run_stock_snapshot}
\alias{run_leaflogix}
\alias{pl_runner}
\alias{pl_population}
\alias{pl_stock_snapshot}
\alias{pl_leaflogix}
\alias{make_cluster}
\alias{init_cluster}
\alias{close_cluster}
\alias{exec_cluster}
\alias{summarize_logs}
\alias{summarize_fail}
\title{Functions to Run Leaflogix Pipeliens}
\usage{
run_population(
  ncores = NULL,
  org = NULL,
  store = NULL,
  days = 1,
  write = FALSE
)

run_stock_snapshot(
  ncores = NULL,
  org = NULL,
  store = NULL,
  days = 1,
  write = FALSE
)

run_leaflogix(
  ncores = NULL,
  org = NULL,
  store = NULL,
  endpt = NULL,
  test_run = FALSE
)

pl_runner(ncores, input_list, fun, stop_cluster = TRUE, LB = FALSE)

pl_population(org, store, auth, consumerkey, days = 1, write = FALSE)

pl_stock_snapshot(org, store, auth, consumerkey, days = 1, write = FALSE)

pl_leaflogix(org, store, auth, consumerkey, endpt)

make_cluster(ncores, outfile = "cluster.log")

init_cluster(cl = NULL, export_vars = NULL, .env = NULL, pkgs = NULL)

close_cluster(cl = NULL, stop = TRUE)

exec_cluster(cl = NULL, input_list, fun, LB = FALSE)

summarize_logs(LDT)

summarize_fail(LDT)
}
\arguments{
\item{ncores}{if not specified will execute with available cores on system}

\item{org}{org short name}

\item{store}{store short name}

\item{days}{number of days to build data for}

\item{write}{wether to land data in integrated database. Default FALSE}

\item{endpt}{api endpoint name}

\item{test_run}{run with a sample of 10 inputs}

\item{input_list}{a list of inputs to distribute across the cluster and run \code{fun}}

\item{fun}{function to execute in parallel}

\item{stop_cluster}{whether to stop the cluster after run (default is TRUE)}

\item{LB}{run with load balancing (default is FALSE)}

\item{auth}{internal - advanced use only}

\item{consumerkey}{internal - advanced use only}

\item{outfile}{log file path for cluster process}

\item{cl}{cluster object}

\item{export_vars}{names of variables in the parent environment to export to nodes in
the cluster}

\item{.env}{optional environment to pass in that contains objects named in export_vars}

\item{pkgs}{package name(s) to export to cluster}

\item{stop}{if TRUE (default) also close the cluster}

\item{LDT}{internal - advanced use only}
}
\description{
Functions to Run Leaflogix Pipeliens
}
\section{Functions}{
\itemize{
\item \code{run_population()}: build population subset for a specific individual location

\item \code{run_stock_snapshot()}: Primary run function for building and landing stock_snapshot

\item \code{run_leaflogix()}: Primary run function for leaflogix orgs

\item \code{pl_runner()}: execution function

\item \code{pl_population()}: build population subset for a specific individual location

\item \code{pl_stock_snapshot()}: build population subset for a specific individual location

\item \code{pl_leaflogix()}: execution orchestrated by \code{run_leaflogix}

\item \code{make_cluster()}: make cluster create cluster.log file

\item \code{init_cluster()}: initialize cluster environment

\item \code{close_cluster()}: clean up environment, gather and return log files, stop cluster

\item \code{exec_cluster()}: exec on cluster

\item \code{summarize_logs()}: Summarize log errors returned by \code{run_pl_leaflogix}

\item \code{summarize_fail()}: Summarize log errors returned by \code{run_pl_leaflogix}

}}
