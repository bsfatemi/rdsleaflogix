# For help debugging build failures open an issue on the RStudio community with the 'github-actions' tag.
# https://community.rstudio.com/new-topic?category=Package%20development&tags=github-actions
on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

name: R-CMD-check

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}
    timeout-minutes: 40

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          # - {os: windows-latest, r: 'release'}
          # - {os: macOS-latest, r: 'release'}
          - {os: ubuntu-20.04, r: 'devel'}

    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      RSPM: ${{ matrix.config.rspm }}
      GITHUB_PAT: ${{ secrets.GH_PAT }}
      HCA_DB_PWD: ${{ secrets.HCA_DB_PWD }}
      CONNECT_SERVER: ${{ secrets.CONNECT_SERVER }}
      CONNECT_API_KEY: ${{ secrets.CONNECT_API_KEY }}

    steps:
      - uses: actions/checkout@v3

      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}

      - uses: r-lib/actions/setup-pandoc@v2

      - name: Install openssl system dependancy
        run: |
          sudo apt-get install -y libcurl4-openssl-dev

      - name: Install system dependencies
        if: runner.os == 'Linux'
        run: |
          while read -r cmd
          do
            eval sudo $cmd
          done < <(Rscript -e 'writeLines(remotes::system_requirements("ubuntu", "20.04"))')

      - name: Install additional system dependencies
        if: runner.os == 'Linux'
        run: |
          sudo apt-get install -y libicu-dev libzstd-dev

      - name: Install needed HCA dependencies (non Linux)
        if: runner.os != 'Linux'
        run: |
          remotes::install_github("r-data-science/rdtools", type = "binary")
        shell: Rscript {0}

      - name: Install needed HCA dependencies (Linux)
        if: runner.os == 'Linux'
        run: |
          remotes::install_github("r-data-science/rdtools")
        shell: Rscript {0}

      - name: Install dependencies
        run: |
          remotes::install_deps(dependencies = TRUE, repos = "https://cloud.r-project.org")
          remotes::install_cran("rcmdcheck", repos = "https://cloud.r-project.org")
        shell: Rscript {0}

      - name: Check
        env:
          _R_CHECK_CRAN_INCOMING_REMOTE_: false
        run: |
          options(crayon.enabled = TRUE)
          rcmdcheck::rcmdcheck(args = c("--no-manual", "--as-cran", "--no-build-vignettes"), build_args = c("--no-build-vignettes"), error_on = "error", check_dir = "check")
        shell: Rscript {0}

      - name: Upload check results
        if: failure()
        uses: actions/upload-artifact@main
        with:
          name: ${{ runner.os }}-r${{ matrix.config.r }}-results
          path: check

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        env:
            CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
